/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TripleSlopeRateModel,
  TripleSlopeRateModelInterface,
} from "../TripleSlopeRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink1_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink2_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roof_",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roof",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "roof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d8e38038062000d8e833981810160405260c08110156200003757600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050620000908686868686866200009c60201b60201c565b50505050505062000449565b81831115620000f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062000d686026913960400191505060405180910390fd5b670de0b6b3a764000081101562000176576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e76616c696420726f6f662076616c7565000000000000000000000000000081525060200191505060405180910390fd5b620001936220148087620002a160201b620005f61790919060201c565b600181905550620001f0620001ba8462201480620002f360201b620005701790919060201c565b620001dc670de0b6b3a764000088620002f360201b620005701790919060201c565b620002a160201b620005f61790919060201c565b600081905550620002136220148085620002a160201b620005f61790919060201c565b6002819055508260038190555081600481905550806005819055507f4b73aac5f6a6d7f85af810fb244e35fa994ef635f5806dadef27143533fb643660015460005460025460035460045460055460405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390a1505050505050565b6000620002eb83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200037e60201b60201c565b905092915050565b60008083141562000308576000905062000378565b60008284029050828482816200031a57fe5b041462000373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062000d476021913960400191505060405180910390fd5b809150505b92915050565b600080831182906200042e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620003f2578082015181840152602081019050620003d5565b50505050905090810190601f168015620004205780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816200043b57fe5b049050809150509392505050565b6108ee80620004596000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638726bb89116100715780638726bb89146101b8578063a385fb96146101d6578063b8168816146101f4578063b9f9850a14610254578063d34f611414610272578063f14039de14610290576100a9565b806315f24053146100ae5780632191f92a1461010457806350af8cd614610126578063573be0fb146101445780636e71e2d814610162575b600080fd5b6100ee600480360360608110156100c457600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506102ae565b6040518082815260200191505060405180910390f35b61010c610418565b604051808215151515815260200191505060405180910390f35b61012e61041d565b6040518082815260200191505060405180910390f35b61014c610423565b6040518082815260200191505060405180910390f35b6101a26004803603606081101561017857600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610429565b6040518082815260200191505060405180910390f35b6101c06104ad565b6040518082815260200191505060405180910390f35b6101de6104b3565b6040518082815260200191505060405180910390f35b61023e6004803603608081101561020a57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506104ba565b6040518082815260200191505060405180910390f35b61025c61055e565b6040518082815260200191505060405180910390f35b61027a610564565b6040518082815260200191505060405180910390f35b61029861056a565b6040518082815260200191505060405180910390f35b6000806102bc858585610429565b905060035481116103125761030a6001546102fc670de0b6b3a76400006102ee6000548661057090919063ffffffff16565b6105f690919063ffffffff16565b61064090919063ffffffff16565b915050610411565b600454811161036857610360600154610352670de0b6b3a764000061034460005460035461057090919063ffffffff16565b6105f690919063ffffffff16565b61064090919063ffffffff16565b915050610411565b60006103af6001546103a1670de0b6b3a764000061039360005460035461057090919063ffffffff16565b6105f690919063ffffffff16565b61064090919063ffffffff16565b905060006103c8600454846106c890919063ffffffff16565b905061040b826103fd670de0b6b3a76400006103ef6002548661057090919063ffffffff16565b6105f690919063ffffffff16565b61064090919063ffffffff16565b93505050505b9392505050565b600181565b60045481565b60055481565b60008083141561043c57600090506104a6565b600061048f61046684610458878961064090919063ffffffff16565b6106c890919063ffffffff16565b610481670de0b6b3a76400008761057090919063ffffffff16565b6105f690919063ffffffff16565b90506005548111156104a15760055490505b809150505b9392505050565b60005481565b6220148081565b6000806104d883670de0b6b3a76400006106c890919063ffffffff16565b905060006104e78787876102ae565b90506000610518670de0b6b3a764000061050a858561057090919063ffffffff16565b6105f690919063ffffffff16565b9050610551670de0b6b3a7640000610543836105358c8c8c610429565b61057090919063ffffffff16565b6105f690919063ffffffff16565b9350505050949350505050565b60025481565b60035481565b60015481565b60008083141561058357600090506105f0565b600082840290508284828161059457fe5b04146105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806108996021913960400191505060405180910390fd5b809150505b92915050565b600061063883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610712565b905092915050565b6000808284019050838110156106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061070a83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506107d8565b905092915050565b600080831182906107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610783578082015181840152602081019050610768565b50505050905090810190601f1680156107b05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816107ca57fe5b049050809150509392505050565b6000838311158290610885576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561084a57808201518184015260208101905061082f565b50505050905090810190601f1680156108775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158205b78000d87d474b57873a5455ed39df9a4531692faa6d4bcc913b750d5b14fb864736f6c63430005100032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776b696e6b31206d757374206c657373207468616e206f7220657175616c20746f206b696e6b32";

type TripleSlopeRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TripleSlopeRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TripleSlopeRateModel__factory extends ContractFactory {
  constructor(...args: TripleSlopeRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink1_: PromiseOrValue<BigNumberish>,
    kink2_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TripleSlopeRateModel> {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink1_,
      kink2_,
      roof_,
      overrides || {}
    ) as Promise<TripleSlopeRateModel>;
  }
  override getDeployTransaction(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink1_: PromiseOrValue<BigNumberish>,
    kink2_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink1_,
      kink2_,
      roof_,
      overrides || {}
    );
  }
  override attach(address: string): TripleSlopeRateModel {
    return super.attach(address) as TripleSlopeRateModel;
  }
  override connect(signer: Signer): TripleSlopeRateModel__factory {
    return super.connect(signer) as TripleSlopeRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TripleSlopeRateModelInterface {
    return new utils.Interface(_abi) as TripleSlopeRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TripleSlopeRateModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TripleSlopeRateModel;
  }
}
