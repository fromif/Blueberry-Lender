/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CompoundLens,
  CompoundLensInterface,
} from "../../../Lens/CompoundLens.sol/CompoundLens";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "contract BToken",
        name: "bToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "bTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "collateralEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nativeTokenBalance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.BTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract BToken[]",
        name: "bTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "bTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "collateralEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nativeTokenBalance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.BTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract BToken",
        name: "bToken",
        type: "address",
      },
    ],
    name: "bTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCollateralTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "enum ComptrollerV1Storage.Version",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "collateralCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "supplyPaused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "borrowPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "supplyCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.BTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract BToken[]",
        name: "bTokens",
        type: "address[]",
      },
    ],
    name: "bTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCollateralTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "enum ComptrollerV1Storage.Version",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "collateralCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "supplyPaused",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "borrowPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "supplyCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.BTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract Comptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "contract BToken[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CBTokenInterface[]",
        name: "bTokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimableCompRewards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CSLPInterface[]",
        name: "bTokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "sushi",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimableSushiRewards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613ab8806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637dd8f6d91161005b5780637dd8f6d9146101125780637f8ee3eb14610142578063b81f31b914610172578063da84fefe146101a25761007d565b80630e23cffd146100825780631e47628c146100b2578063584dcefc146100e2575b600080fd5b61009c60048036036100979190810190612865565b6101d2565b6040516100a99190613540565b60405180910390f35b6100cc60048036036100c7919081019061271b565b610423565b6040516100d9919061351e565b60405180910390f35b6100fc60048036036100f79190810190612949565b61074a565b604051610109919061361d565b60405180910390f35b61012c60048036036101279190810190612a29565b61086a565b60405161013991906135df565b60405180910390f35b61015c60048036036101579190810190612972565b6109c6565b6040516101699190613601565b60405180910390f35b61018c60048036036101879190810190612760565b611038565b60405161019991906134fc565b60405180910390f35b6101bc60048036036101b791908101906127f9565b6110ea565b6040516101c99190613540565b60405180910390f35b6060600085859050905060608160405190808252806020026020018201604052801561020d5781602001602082028038833980820191505090505b50905060008090505b828110156104155760008673ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016102599190613474565b60206040518083038186803b15801561027157600080fd5b505afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102a99190810190612acf565b90508888838181106102b757fe5b90506020020160206102cc91908101906129d7565b73ffffffffffffffffffffffffffffffffffffffff16632781e0d5876040518263ffffffff1660e01b81526004016103049190613474565b602060405180830381600087803b15801561031e57600080fd5b505af1158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103569190810190612acf565b5060008773ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016103929190613474565b60206040518083038186803b1580156103aa57600080fd5b505afa1580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103e29190810190612acf565b90506103ee818361133b565b8484815181106103fa57fe5b60200260200101818152505050508080600101915050610216565b508092505050949350505050565b6060600083839050905060008111610470576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906135bf565b60405180910390fd5b6060816040519080825280602002602001820160405280156104ac57816020015b610499612166565b8152602001906001900390816104915790505b5090506000858560008181106104be57fe5b90506020020160206104d39190810190612949565b73ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561051857600080fd5b505afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105509190810190612a00565b905060008173ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105d29190810190612a65565b905060008090505b8481101561073c578787828181106105ee57fe5b90506020020160206106039190810190612949565b73ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561064857600080fd5b505afa15801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106809190810190612a00565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e49061359f565b60405180910390fd5b6107188888838181106106fc57fe5b90506020020160206107119190810190612949565b8484611385565b84828151811061072457fe5b602002602001018190525080806001019150506105da565b508294505050505092915050565b61075261224a565b60008273ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561079a57600080fd5b505afa1580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107d29190810190612a00565b905060008173ffffffffffffffffffffffffffffffffffffffff16637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561081c57600080fd5b505afa158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108549190810190612a65565b9050610861848383611385565b92505050919050565b61087261232e565b60008060008573ffffffffffffffffffffffffffffffffffffffff16635ec88c79866040518263ffffffff1660e01b81526004016108b09190613474565b60606040518083038186803b1580156108c857600080fd5b505afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109009190810190612af8565b9250925092506000831461091357600080fd5b60405180606001604052808773ffffffffffffffffffffffffffffffffffffffff1663abfceffc886040518263ffffffff1660e01b81526004016109579190613474565b60006040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506109ac91908101906127b8565b815260200183815260200182815250935050505092915050565b6109ce61234f565b60008373ffffffffffffffffffffffffffffffffffffffff16635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a4e9190810190612a00565b905060008173ffffffffffffffffffffffffffffffffffffffff1663929fe9a185876040518363ffffffff1660e01b8152600401610a8d9291906134d3565b60206040518083038186803b158015610aa557600080fd5b505afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610add91908101906128d1565b90506000806000610ba58873ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610b2d57600080fd5b505afa158015610b41573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610b6a9190810190612a8e565b6040518060400160405280600581526020017f63724554480000000000000000000000000000000000000000000000000000008152506120b8565b15610be3578673ffffffffffffffffffffffffffffffffffffffff163192508673ffffffffffffffffffffffffffffffffffffffff16319150610d85565b600088905060008173ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b158015610c3057600080fd5b505afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c6891908101906126f2565b90508073ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b8152600401610ca3919061348f565b60206040518083038186803b158015610cbb57600080fd5b505afa158015610ccf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610cf39190810190612acf565b94508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8a8c6040518363ffffffff1660e01b8152600401610d309291906134aa565b60206040518083038186803b158015610d4857600080fd5b505afa158015610d5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d809190810190612acf565b935050505b8315610e20578773ffffffffffffffffffffffffffffffffffffffff1663c37f68e2886040518263ffffffff1660e01b8152600401610dc4919061348f565b60806040518083038186803b158015610ddc57600080fd5b505afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e149190810190612b47565b90919250905050809150505b6040518061012001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b8152600401610e81919061348f565b60206040518083038186803b158015610e9957600080fd5b505afa158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ed19190810190612acf565b81526020018973ffffffffffffffffffffffffffffffffffffffff166317bfdfbc8a6040518263ffffffff1660e01b8152600401610f0f919061348f565b602060405180830381600087803b158015610f2957600080fd5b505af1158015610f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f619190810190612acf565b81526020018973ffffffffffffffffffffffffffffffffffffffff16633af9e6698a6040518263ffffffff1660e01b8152600401610f9f919061348f565b602060405180830381600087803b158015610fb957600080fd5b505af1158015610fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ff19190810190612acf565b815260200184815260200183815260200185151581526020018281526020018873ffffffffffffffffffffffffffffffffffffffff16318152509550505050505092915050565b6060600084849050905060608160405190808252806020026020018201604052801561107e57816020015b61106b6123b3565b8152602001906001900390816110635790505b50905060008090505b828110156110dd576110b987878381811061109e57fe5b90506020020160206110b39190810190612949565b866109c6565b8282815181106110c557fe5b60200260200101819052508080600101915050611087565b5080925050509392505050565b606060008585905090506060816040519080825280602002602001820160405280156111255781602001602082028038833980820191505090505b50905060008090505b8281101561132d5760008673ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016111719190613474565b60206040518083038186803b15801561118957600080fd5b505afa15801561119d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111c19190810190612acf565b90508888838181106111cf57fe5b90506020020160206111e491908101906129ae565b73ffffffffffffffffffffffffffffffffffffffff1663e9af0292876040518263ffffffff1660e01b815260040161121c9190613474565b602060405180830381600087803b15801561123657600080fd5b505af115801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061126e9190810190612acf565b5060008773ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016112aa9190613474565b60206040518083038186803b1580156112c257600080fd5b505afa1580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112fa9190810190612acf565b9050611306818361133b565b84848151811061131257fe5b6020026020010181815250505050808060010191505061112e565b508092505050949350505050565b600061137d83836040518060400160405280601581526020017f7375627472616374696f6e20756e646572666c6f770000000000000000000000815250612111565b905092915050565b61138d61224a565b60008473ffffffffffffffffffffffffffffffffffffffff1663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113d757600080fd5b505af11580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061140f9190810190612acf565b905060008060008673ffffffffffffffffffffffffffffffffffffffff16638e8f294b896040518263ffffffff1660e01b815260040161144f9190613474565b60606040518083038186803b15801561146757600080fd5b505afa15801561147b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061149f91908101906128fa565b92509250925060008060008061156c8c73ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156114f457600080fd5b505afa158015611508573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506115319190810190612a8e565b6040518060400160405280600581526020017f63724554480000000000000000000000000000000000000000000000000000008152506120b8565b1561157e576000935060129250611705565b60008c90508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156115c957600080fd5b505afa1580156115dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061160191908101906126f2565b94508073ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561164957600080fd5b505afa15801561165d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061168191908101906126f2565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c657600080fd5b505afa1580156116da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116fe9190810190612baa565b60ff169350505b6001600281111561171257fe5b85600281111561171e57fe5b1415611829578b73ffffffffffffffffffffffffffffffffffffffff1663d2bb18e96040518163ffffffff1660e01b815260040160206040518083038186803b15801561176a57600080fd5b505afa15801561177e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117a29190810190612acf565b91508b73ffffffffffffffffffffffffffffffffffffffff166319a4dd3c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117ea57600080fd5b505afa1580156117fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118229190810190612acf565b9050611949565b60028081111561183557fe5b85600281111561184157fe5b1415611948578b73ffffffffffffffffffffffffffffffffffffffff1663d2bb18e96040518163ffffffff1660e01b815260040160206040518083038186803b15801561188d57600080fd5b505afa1580156118a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118c59190810190612acf565b91508b73ffffffffffffffffffffffffffffffffffffffff166319a4dd3c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561190d57600080fd5b505afa158015611921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119459190810190612acf565b90505b5b604051806102c001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018d73ffffffffffffffffffffffffffffffffffffffff1663ae9d70b06040518163ffffffff1660e01b815260040160206040518083038186803b1580156119bd57600080fd5b505afa1580156119d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119f59190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff1663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b158015611a4057600080fd5b505afa158015611a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a789190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff1663173b99046040518163ffffffff1660e01b815260040160206040518083038186803b158015611ac357600080fd5b505afa158015611ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611afb9190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b158015611b4657600080fd5b505afa158015611b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b7e9190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff16638f840ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bc957600080fd5b505afa158015611bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c019190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c4c57600080fd5b505afa158015611c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c849190810190612acf565b81526020018d73ffffffffffffffffffffffffffffffffffffffff16633b1d21a26040518163ffffffff1660e01b815260040160206040518083038186803b158015611ccf57600080fd5b505afa158015611ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d079190810190612acf565b815260200182815260200188151581526020018781526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018d73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611d8257600080fd5b505afa158015611d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dba9190810190612baa565b60ff168152602001848152602001866002811115611dd457fe5b81526020018381526020018b73ffffffffffffffffffffffffffffffffffffffff1663fc57d4df8f6040518263ffffffff1660e01b8152600401611e189190613562565b60206040518083038186803b158015611e3057600080fd5b505afa158015611e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e689190810190612acf565b81526020018c73ffffffffffffffffffffffffffffffffffffffff1663731f0c2b8f6040518263ffffffff1660e01b8152600401611ea69190613474565b60206040518083038186803b158015611ebe57600080fd5b505afa158015611ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ef691908101906128d1565b151581526020018c73ffffffffffffffffffffffffffffffffffffffff16636d154ea58f6040518263ffffffff1660e01b8152600401611f369190613474565b60206040518083038186803b158015611f4e57600080fd5b505afa158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f8691908101906128d1565b151581526020018c73ffffffffffffffffffffffffffffffffffffffff166302c3bcbb8f6040518263ffffffff1660e01b8152600401611fc69190613474565b60206040518083038186803b158015611fde57600080fd5b505afa158015611ff2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120169190810190612acf565b81526020018c73ffffffffffffffffffffffffffffffffffffffff16634a5844328f6040518263ffffffff1660e01b81526004016120549190613474565b60206040518083038186803b15801561206c57600080fd5b505afa158015612080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120a49190810190612acf565b815250985050505050505050509392505050565b6000816040516020016120cb919061345d565b60405160208183030381529060405280519060200120836040516020016120f2919061345d565b6040516020818303038152906040528051906020012014905092915050565b6000838311158290612159576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612150919061357d565b60405180910390fd5b5082840390509392505050565b604051806102c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000600281111561221657fe5b8152602001600081526020016000815260200160001515815260200160001515815260200160008152602001600081525090565b604051806102c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060028111156122fa57fe5b8152602001600081526020016000815260200160001515815260200160001515815260200160008152602001600081525090565b60405180606001604052806060815260200160008152602001600081525090565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60008135905061242681613968565b92915050565b60008151905061243b81613968565b92915050565b6000813590506124508161397f565b92915050565b60008083601f84011261246857600080fd5b8235905067ffffffffffffffff81111561248157600080fd5b60208301915083602082028301111561249957600080fd5b9250929050565b600082601f8301126124b157600080fd5b81516124c46124bf82613666565b613639565b915081818352602084019350602081019050838560208402820111156124e957600080fd5b60005b8381101561251957816124ff88826125e1565b8452602084019350602083019250506001810190506124ec565b5050505092915050565b60008083601f84011261253557600080fd5b8235905067ffffffffffffffff81111561254e57600080fd5b60208301915083602082028301111561256657600080fd5b9250929050565b60008083601f84011261257f57600080fd5b8235905067ffffffffffffffff81111561259857600080fd5b6020830191508360208202830111156125b057600080fd5b9250929050565b6000815190506125c681613996565b92915050565b6000813590506125db816139ad565b92915050565b6000815190506125f0816139ad565b92915050565b600081359050612605816139c4565b92915050565b60008135905061261a816139db565b92915050565b60008151905061262f816139f2565b92915050565b60008135905061264481613a09565b92915050565b60008151905061265981613a20565b92915050565b60008151905061266e81613a37565b92915050565b600082601f83011261268557600080fd5b81516126986126938261368e565b613639565b915080825260208301602083018583830111156126b457600080fd5b6126bf838284613917565b50505092915050565b6000815190506126d781613a47565b92915050565b6000815190506126ec81613a5e565b92915050565b60006020828403121561270457600080fd5b60006127128482850161242c565b91505092915050565b6000806020838503121561272e57600080fd5b600083013567ffffffffffffffff81111561274857600080fd5b61275485828601612456565b92509250509250929050565b60008060006040848603121561277557600080fd5b600084013567ffffffffffffffff81111561278f57600080fd5b61279b86828701612456565b935093505060206127ae86828701612441565b9150509250925092565b6000602082840312156127ca57600080fd5b600082015167ffffffffffffffff8111156127e457600080fd5b6127f0848285016124a0565b91505092915050565b6000806000806060858703121561280f57600080fd5b600085013567ffffffffffffffff81111561282957600080fd5b61283587828801612523565b9450945050602061284887828801612417565b925050604061285987828801612417565b91505092959194509250565b6000806000806060858703121561287b57600080fd5b600085013567ffffffffffffffff81111561289557600080fd5b6128a18782880161256d565b945094505060206128b487828801612417565b92505060406128c587828801612417565b91505092959194509250565b6000602082840312156128e357600080fd5b60006128f1848285016125b7565b91505092915050565b60008060006060848603121561290f57600080fd5b600061291d868287016125b7565b935050602061292e868287016126c8565b925050604061293f8682870161265f565b9150509250925092565b60006020828403121561295b57600080fd5b6000612969848285016125cc565b91505092915050565b6000806040838503121561298557600080fd5b6000612993858286016125cc565b92505060206129a485828601612441565b9150509250929050565b6000602082840312156129c057600080fd5b60006129ce848285016125f6565b91505092915050565b6000602082840312156129e957600080fd5b60006129f78482850161260b565b91505092915050565b600060208284031215612a1257600080fd5b6000612a2084828501612620565b91505092915050565b60008060408385031215612a3c57600080fd5b6000612a4a85828601612635565b9250506020612a5b85828601612417565b9150509250929050565b600060208284031215612a7757600080fd5b6000612a858482850161264a565b91505092915050565b600060208284031215612aa057600080fd5b600082015167ffffffffffffffff811115612aba57600080fd5b612ac684828501612674565b91505092915050565b600060208284031215612ae157600080fd5b6000612aef848285016126c8565b91505092915050565b600080600060608486031215612b0d57600080fd5b6000612b1b868287016126c8565b9350506020612b2c868287016126c8565b9250506040612b3d868287016126c8565b9150509250925092565b60008060008060808587031215612b5d57600080fd5b6000612b6b878288016126c8565b9450506020612b7c878288016126c8565b9350506040612b8d878288016126c8565b9250506060612b9e878288016126c8565b91505092959194509250565b600060208284031215612bbc57600080fd5b6000612bca848285016126dd565b91505092915050565b6000612bdf8383612de9565b60208301905092915050565b6000612bf78383613007565b6101208301905092915050565b6000612c108383613286565b6102c08301905092915050565b6000612c29838361344e565b60208301905092915050565b612c3e816138ab565b82525050565b612c4d816137c5565b82525050565b612c5c816137c5565b82525050565b6000612c6d826136fa565b612c778185613765565b9350612c82836136ba565b8060005b83811015612cb3578151612c9a8882612bd3565b9750612ca583613731565b925050600181019050612c86565b5085935050505092915050565b6000612ccb82613705565b612cd58185613776565b9350612ce0836136ca565b8060005b83811015612d11578151612cf88882612beb565b9750612d038361373e565b925050600181019050612ce4565b5085935050505092915050565b6000612d2982613710565b612d338185613787565b9350612d3e836136da565b8060005b83811015612d6f578151612d568882612c04565b9750612d618361374b565b925050600181019050612d42565b5085935050505092915050565b6000612d878261371b565b612d918185613798565b9350612d9c836136ea565b8060005b83811015612dcd578151612db48882612c1d565b9750612dbf83613758565b925050600181019050612da0565b5085935050505092915050565b612de3816137e9565b82525050565b612df2816138bd565b82525050565b612e01816138bd565b82525050565b612e10816138e1565b82525050565b6000612e2182613726565b612e2b81856137a9565b9350612e3b818560208601613917565b612e448161394a565b840191505092915050565b6000612e5a82613726565b612e6481856137ba565b9350612e74818560208601613917565b80840191505092915050565b6000612e8d6014836137a9565b91507f6d69736d6174636820636f6d7074726f6c6c65720000000000000000000000006000830152602082019050919050565b6000612ecd600d836137a9565b91507f696e76616c696420696e707574000000000000000000000000000000000000006000830152602082019050919050565b60006060830160008301518482036000860152612f1d8282612c62565b9150506020830151612f32602086018261344e565b506040830151612f45604086018261344e565b508091505092915050565b61012082016000820151612f676000850182612c44565b506020820151612f7a602085018261344e565b506040820151612f8d604085018261344e565b506060820151612fa0606085018261344e565b506080820151612fb3608085018261344e565b5060a0820151612fc660a085018261344e565b5060c0820151612fd960c0850182612dda565b5060e0820151612fec60e085018261344e565b5061010082015161300161010085018261344e565b50505050565b6101208201600082015161301e6000850182612c44565b506020820151613031602085018261344e565b506040820151613044604085018261344e565b506060820151613057606085018261344e565b50608082015161306a608085018261344e565b5060a082015161307d60a085018261344e565b5060c082015161309060c0850182612dda565b5060e08201516130a360e085018261344e565b506101008201516130b861010085018261344e565b50505050565b6102c0820160008201516130d56000850182612c44565b5060208201516130e8602085018261344e565b5060408201516130fb604085018261344e565b50606082015161310e606085018261344e565b506080820151613121608085018261344e565b5060a082015161313460a085018261344e565b5060c082015161314760c085018261344e565b5060e082015161315a60e085018261344e565b5061010082015161316f61010085018261344e565b5061012082015161318461012085018261344e565b50610140820151613199610140850182612dda565b506101608201516131ae61016085018261344e565b506101808201516131c3610180850182612c44565b506101a08201516131d86101a085018261344e565b506101c08201516131ed6101c085018261344e565b506101e08201516132026101e0850182612e07565b5061020082015161321761020085018261344e565b5061022082015161322c61022085018261344e565b50610240820151613241610240850182612dda565b50610260820151613256610260850182612dda565b5061028082015161326b61028085018261344e565b506102a08201516132806102a085018261344e565b50505050565b6102c08201600082015161329d6000850182612c44565b5060208201516132b0602085018261344e565b5060408201516132c3604085018261344e565b5060608201516132d6606085018261344e565b5060808201516132e9608085018261344e565b5060a08201516132fc60a085018261344e565b5060c082015161330f60c085018261344e565b5060e082015161332260e085018261344e565b5061010082015161333761010085018261344e565b5061012082015161334c61012085018261344e565b50610140820151613361610140850182612dda565b5061016082015161337661016085018261344e565b5061018082015161338b610180850182612c44565b506101a08201516133a06101a085018261344e565b506101c08201516133b56101c085018261344e565b506101e08201516133ca6101e0850182612e07565b506102008201516133df61020085018261344e565b506102208201516133f461022085018261344e565b50610240820151613409610240850182612dda565b5061026082015161341e610260850182612dda565b5061028082015161343361028085018261344e565b506102a08201516134486102a085018261344e565b50505050565b61345781613894565b82525050565b60006134698284612e4f565b915081905092915050565b60006020820190506134896000830184612c53565b92915050565b60006020820190506134a46000830184612c35565b92915050565b60006040820190506134bf6000830185612c35565b6134cc6020830184612c53565b9392505050565b60006040820190506134e86000830185612c35565b6134f56020830184612df8565b9392505050565b600060208201905081810360008301526135168184612cc0565b905092915050565b600060208201905081810360008301526135388184612d1e565b905092915050565b6000602082019050818103600083015261355a8184612d7c565b905092915050565b60006020820190506135776000830184612df8565b92915050565b600060208201905081810360008301526135978184612e16565b905092915050565b600060208201905081810360008301526135b881612e80565b9050919050565b600060208201905081810360008301526135d881612ec0565b9050919050565b600060208201905081810360008301526135f98184612f00565b905092915050565b6000610120820190506136176000830184612f50565b92915050565b60006102c08201905061363360008301846130be565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561365c57600080fd5b8060405250919050565b600067ffffffffffffffff82111561367d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156136a557600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006137d082613874565b9050919050565b60006137e282613874565b9050919050565b60008115159050919050565b6000613800826137c5565b9050919050565b6000613812826137c5565b9050919050565b6000613824826137c5565b9050919050565b6000613836826137c5565b9050919050565b6000613848826137c5565b9050919050565b600061385a826137c5565b9050919050565b600081905061386f8261395b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006138b6826138f3565b9050919050565b60006138c8826138cf565b9050919050565b60006138da82613874565b9050919050565b60006138ec82613861565b9050919050565b60006138fe82613905565b9050919050565b600061391082613874565b9050919050565b60005b8381101561393557808201518184015260208101905061391a565b83811115613944576000848401525b50505050565b6000601f19601f8301169050919050565b6003811061396557fe5b50565b613971816137c5565b811461397c57600080fd5b50565b613988816137d7565b811461399357600080fd5b50565b61399f816137e9565b81146139aa57600080fd5b50565b6139b6816137f5565b81146139c157600080fd5b50565b6139cd81613807565b81146139d857600080fd5b50565b6139e481613819565b81146139ef57600080fd5b50565b6139fb8161382b565b8114613a0657600080fd5b50565b613a128161383d565b8114613a1d57600080fd5b50565b613a298161384f565b8114613a3457600080fd5b50565b60038110613a4457600080fd5b50565b613a5081613894565b8114613a5b57600080fd5b50565b613a678161389e565b8114613a7257600080fd5b5056fea365627a7a723158204d4b03910203300705420d75bc231e9a1ec25e374fdadd4694a6f85808fc4a046c6578706572696d656e74616cf564736f6c63430005100040";

type CompoundLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundLens__factory extends ContractFactory {
  constructor(...args: CompoundLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  override connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
