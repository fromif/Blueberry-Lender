/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BCollateralCapStorage,
  BCollateralCapStorageInterface,
} from "../../BTokenInterfaces.sol/BCollateralCapStorage";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountCollateralTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "collateralCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isCollateralTokenInit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalCollateralTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806319a4dd3c1461005157806385d8a2e61461006f578063d240d64a146100cb578063d2bb18e914610123575b600080fd5b610059610141565b6040518082815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610147565b604051808215151515815260200191505060405180910390f35b61010d600480360360208110156100e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610167565b6040518082815260200191505060405180910390f35b61012b61017f565b6040518082815260200191505060405180910390f35b60005481565b60026020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6003548156fea265627a7a7231582067583ab83d4ff8a3975011541a11d191662a97a43a67b5762ea1724631bc36ec64736f6c63430005100032";

type BCollateralCapStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BCollateralCapStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BCollateralCapStorage__factory extends ContractFactory {
  constructor(...args: BCollateralCapStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BCollateralCapStorage> {
    return super.deploy(overrides || {}) as Promise<BCollateralCapStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BCollateralCapStorage {
    return super.attach(address) as BCollateralCapStorage;
  }
  override connect(signer: Signer): BCollateralCapStorage__factory {
    return super.connect(signer) as BCollateralCapStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BCollateralCapStorageInterface {
    return new utils.Interface(_abi) as BCollateralCapStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BCollateralCapStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BCollateralCapStorage;
  }
}
