/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  JumpRateModelV2,
  JumpRateModelV2Interface,
} from "../JumpRateModelV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roof_",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roof",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "roof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c6a38038062000c6a833981810160405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050506200008585858585856200009060201b60201c565b5050505050620003d0565b670de0b6b3a76400008110156200010f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e76616c696420726f6f662076616c7565000000000000000000000000000081525060200191505060405180910390fd5b6200012c62201480866200022860201b620005711790919060201c565b600181905550620001896200015383622014806200027a60201b620004eb1790919060201c565b62000175670de0b6b3a7640000876200027a60201b620004eb1790919060201c565b6200022860201b620005711790919060201c565b600081905550620001ac62201480846200022860201b620005711790919060201c565b60028190555081600381905550806004819055507fd4a5368e470b1a5bcef19c35c285f3c1507a740d3a0044927d719c8a81bb1cdd600154600054600254600354600454604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a15050505050565b60006200027283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200030560201b60201c565b905092915050565b6000808314156200028f5760009050620002ff565b6000828402905082848281620002a157fe5b0414620002fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018062000c496021913960400191505060405180910390fd5b809150505b92915050565b60008083118290620003b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620003795780820151818401526020810190506200035c565b50505050905090810190601f168015620003a75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620003c257fe5b049050809150509392505050565b61086980620003e06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a385fb9611610066578063a385fb96146101ad578063b8168816146101cb578063b9f9850a1461022b578063f14039de14610249578063fd2da339146102675761009e565b806315f24053146100a35780632191f92a146100f9578063573be0fb1461011b5780636e71e2d8146101395780638726bb891461018f575b600080fd5b6100e3600480360360608110156100b957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610285565b6040518082815260200191505060405180910390f35b610101610399565b604051808215151515815260200191505060405180910390f35b61012361039e565b6040518082815260200191505060405180910390f35b6101796004803603606081101561014f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506103a4565b6040518082815260200191505060405180910390f35b610197610428565b6040518082815260200191505060405180910390f35b6101b561042e565b6040518082815260200191505060405180910390f35b610215600480360360808110156101e157600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050610435565b6040518082815260200191505060405180910390f35b6102336104d9565b6040518082815260200191505060405180910390f35b6102516104df565b6040518082815260200191505060405180910390f35b61026f6104e5565b6040518082815260200191505060405180910390f35b6000806102938585856103a4565b905060035481116102e9576102e16001546102d3670de0b6b3a76400006102c5600054866104eb90919063ffffffff16565b61057190919063ffffffff16565b6105bb90919063ffffffff16565b915050610392565b6000610330600154610322670de0b6b3a76400006103146000546003546104eb90919063ffffffff16565b61057190919063ffffffff16565b6105bb90919063ffffffff16565b905060006103496003548461064390919063ffffffff16565b905061038c8261037e670de0b6b3a7640000610370600254866104eb90919063ffffffff16565b61057190919063ffffffff16565b6105bb90919063ffffffff16565b93505050505b9392505050565b600181565b60045481565b6000808314156103b75760009050610421565b600061040a6103e1846103d387896105bb90919063ffffffff16565b61064390919063ffffffff16565b6103fc670de0b6b3a7640000876104eb90919063ffffffff16565b61057190919063ffffffff16565b905060045481111561041c5760045490505b809150505b9392505050565b60005481565b6220148081565b60008061045383670de0b6b3a764000061064390919063ffffffff16565b90506000610462878787610285565b90506000610493670de0b6b3a764000061048585856104eb90919063ffffffff16565b61057190919063ffffffff16565b90506104cc670de0b6b3a76400006104be836104b08c8c8c6103a4565b6104eb90919063ffffffff16565b61057190919063ffffffff16565b9350505050949350505050565b60025481565b60015481565b60035481565b6000808314156104fe576000905061056b565b600082840290508284828161050f57fe5b0414610566576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806108146021913960400191505060405180910390fd5b809150505b92915050565b60006105b383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061068d565b905092915050565b600080828401905083811015610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061068583836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f7700815250610753565b905092915050565b60008083118290610739576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106fe5780820151818401526020810190506106e3565b50505050905090810190601f16801561072b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161074557fe5b049050809150509392505050565b6000838311158290610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107c55780820151818401526020810190506107aa565b50505050905090810190601f1680156107f25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820f42d904aef67865eacda7a69455da8e249ae8e54975161946fd631c83f6f966564736f6c63430005100032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77";

type JumpRateModelV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JumpRateModelV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JumpRateModelV2__factory extends ContractFactory {
  constructor(...args: JumpRateModelV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JumpRateModelV2> {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      roof_,
      overrides || {}
    ) as Promise<JumpRateModelV2>;
  }
  override getDeployTransaction(
    baseRatePerYear: PromiseOrValue<BigNumberish>,
    multiplierPerYear: PromiseOrValue<BigNumberish>,
    jumpMultiplierPerYear: PromiseOrValue<BigNumberish>,
    kink_: PromiseOrValue<BigNumberish>,
    roof_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      roof_,
      overrides || {}
    );
  }
  override attach(address: string): JumpRateModelV2 {
    return super.attach(address) as JumpRateModelV2;
  }
  override connect(signer: Signer): JumpRateModelV2__factory {
    return super.connect(signer) as JumpRateModelV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpRateModelV2Interface {
    return new utils.Interface(_abi) as JumpRateModelV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JumpRateModelV2 {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModelV2;
  }
}
