/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Maximillion, MaximillionInterface } from "../Maximillion";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BWrappedNative",
        name: "bWrappedNative_",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: true,
    inputs: [],
    name: "bWrappedNative",
    outputs: [
      {
        internalType: "contract BWrappedNative",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
    ],
    name: "repayBehalf",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "contract BWrappedNative",
        name: "bWrappedNative_",
        type: "address",
      },
    ],
    name: "repayBehalfExplicit",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104ec3803806104ec8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610458806100946000396000f3fe6080604052600436106100345760003560e01c8063367b7f0514610039578063674f4f061461009d5780639f35c3d5146100f4575b600080fd5b61009b6004803603604081101561004f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610138565b005b3480156100a957600080fd5b506100b26103d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101366004803603602081101561010a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103f5565b005b600034905060008273ffffffffffffffffffffffffffffffffffffffff166317bfdfbc856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156101be57600080fd5b505af11580156101d2573d6000803e3d6000fd5b505050506040513d60208110156101e857600080fd5b810190808051906020019092919050505090508082111561030d578273ffffffffffffffffffffffffffffffffffffffff1663dbf7692982866040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506020604051808303818588803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b50505050506040513d60208110156102ad57600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8284039081150290604051600060405180830381858888f19350505050158015610307573d6000803e3d6000fd5b506103ca565b8273ffffffffffffffffffffffffffffffffffffffff1663dbf7692983866040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506020604051808303818588803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b50505050506040513d60208110156103b757600080fd5b8101908080519060200190929190505050505b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610420816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610138565b5056fea265627a7a7231582078b240fe49cfe02898bd8b142da682b0cdecbce3b3f9172c933931ec36c56c0c64736f6c63430005100032";

type MaximillionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaximillionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Maximillion__factory extends ContractFactory {
  constructor(...args: MaximillionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bWrappedNative_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Maximillion> {
    return super.deploy(
      bWrappedNative_,
      overrides || {}
    ) as Promise<Maximillion>;
  }
  override getDeployTransaction(
    bWrappedNative_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bWrappedNative_, overrides || {});
  }
  override attach(address: string): Maximillion {
    return super.attach(address) as Maximillion;
  }
  override connect(signer: Signer): Maximillion__factory {
    return super.connect(signer) as Maximillion__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaximillionInterface {
    return new utils.Interface(_abi) as MaximillionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Maximillion {
    return new Contract(address, _abi, signerOrProvider) as Maximillion;
  }
}
