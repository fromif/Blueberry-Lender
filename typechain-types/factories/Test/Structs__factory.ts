/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Structs, StructsInterface } from "../../Test/Structs";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "outers",
    outputs: [
      {
        internalType: "uint256",
        name: "sentinel",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "a",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "b",
        type: "uint16",
      },
      {
        internalType: "uint96",
        name: "c",
        type: "uint96",
      },
    ],
    name: "writeEach",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "a",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "b",
        type: "uint16",
      },
      {
        internalType: "uint96",
        name: "c",
        type: "uint96",
      },
    ],
    name: "writeOnce",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637e31c374146100465780639440ce0c14610088578063d26f269f146100ea575b600080fd5b6100726004803603602081101561005c57600080fd5b810190808035906020019092919050505061014c565b6040518082815260200191505060405180910390f35b6100e86004803603608081101561009e57600080fd5b8101908080359060200190929190803561ffff169060200190929190803561ffff16906020019092919080356bffffffffffffffffffffffff16906020019092919050505061016a565b005b61014a6004803603608081101561010057600080fd5b8101908080359060200190929190803561ffff169060200190929190803561ffff16906020019092919080356bffffffffffffffffffffffff16906020019092919050505061027f565b005b60006020528060005260406000206000915090508060000154905081565b61017261034d565b60405180606001604052808561ffff1681526020018461ffff168152602001836bffffffffffffffffffffffff1681525090508060008087815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055509050505050505050565b600080600086815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050838160000160006101000a81548161ffff021916908361ffff160217905550828160000160026101000a81548161ffff021916908361ffff160217905550818160000160046101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505050505050565b6040518060600160405280600061ffff168152602001600061ffff16815260200160006bffffffffffffffffffffffff168152509056fea265627a7a72315820107b0c15f3ea9e11a888ea4c87341aa1e2bb3defa8d69268b981acc33e53d2ce64736f6c63430005100032";

type StructsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StructsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Structs__factory extends ContractFactory {
  constructor(...args: StructsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Structs> {
    return super.deploy(overrides || {}) as Promise<Structs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Structs {
    return super.attach(address) as Structs;
  }
  override connect(signer: Signer): Structs__factory {
    return super.connect(signer) as Structs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StructsInterface {
    return new utils.Interface(_abi) as StructsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Structs {
    return new Contract(address, _abi, signerOrProvider) as Structs;
  }
}
