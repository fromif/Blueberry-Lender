/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ConstSub,
  ConstSubInterface,
} from "../../../Test/Const.sol/ConstSub";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "ADD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "C",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "c",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610174806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631003e2d21461005157806320603d371461009357806383dfe5fd146100d5578063c3da42b8146100f3575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610111565b6040518082815260200191505060405180910390f35b6100bf600480360360208110156100a957600080fd5b8101908080359060200190929190505050610124565b6040518082815260200191505060405180910390f35b6100dd610131565b6040518082815260200191505060405180910390f35b6100fb610136565b6040518082815260200191505060405180910390f35b600061011b610136565b82019050919050565b6000600182019050919050565b600181565b6000600290509056fea265627a7a7231582079d5c69c346e5ca9445f7e6495b9147b69ada0b54c08c1c94bf48c7f303fcfca64736f6c63430005100032";

type ConstSubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstSubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConstSub__factory extends ContractFactory {
  constructor(...args: ConstSubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConstSub> {
    return super.deploy(overrides || {}) as Promise<ConstSub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConstSub {
    return super.attach(address) as ConstSub;
  }
  override connect(signer: Signer): ConstSub__factory {
    return super.connect(signer) as ConstSub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstSubInterface {
    return new utils.Interface(_abi) as ConstSubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConstSub {
    return new Contract(address, _abi, signerOrProvider) as ConstSub;
  }
}
