/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BCollateralCapErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20__factory>;
    getContractFactory(
      name: "BCollateralCapErc20CheckRepay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20CheckRepay__factory>;
    getContractFactory(
      name: "BCollateralCapErc20CheckRepayDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20CheckRepayDelegate__factory>;
    getContractFactory(
      name: "BCollateralCapErc20Delegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20Delegate__factory>;
    getContractFactory(
      name: "BCollateralCapErc20NoInterest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20NoInterest__factory>;
    getContractFactory(
      name: "BCollateralCapErc20NoInterestDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegate__factory>;
    getContractFactory(
      name: "BErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20__factory>;
    getContractFactory(
      name: "BErc20Delegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Delegate__factory>;
    getContractFactory(
      name: "BErc20Delegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Delegator__factory>;
    getContractFactory(
      name: "BToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BToken__factory>;
    getContractFactory(
      name: "BTokenAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenAdmin__factory>;
    getContractFactory(
      name: "BTokenCheckRepay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenCheckRepay__factory>;
    getContractFactory(
      name: "BCapableErc20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCapableErc20Interface__factory>;
    getContractFactory(
      name: "BCollateralCapErc20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20Interface__factory>;
    getContractFactory(
      name: "BCollateralCapStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapStorage__factory>;
    getContractFactory(
      name: "BDelegateInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BDelegateInterface__factory>;
    getContractFactory(
      name: "BDelegatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BDelegatorInterface__factory>;
    getContractFactory(
      name: "BErc20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Interface__factory>;
    getContractFactory(
      name: "BErc20Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Storage__factory>;
    getContractFactory(
      name: "BSupplyCapStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BSupplyCapStorage__factory>;
    getContractFactory(
      name: "BTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenInterface__factory>;
    getContractFactory(
      name: "BTokenStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenStorage__factory>;
    getContractFactory(
      name: "BWrappedNativeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeInterface__factory>;
    getContractFactory(
      name: "IFlashloanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashloanReceiver__factory>;
    getContractFactory(
      name: "BTokenNoInterest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenNoInterest__factory>;
    getContractFactory(
      name: "BWrappedNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNative__factory>;
    getContractFactory(
      name: "WrappedNativeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrappedNativeInterface__factory>;
    getContractFactory(
      name: "BWrappedNativeDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeDelegate__factory>;
    getContractFactory(
      name: "BWrappedNativeDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeDelegator__factory>;
    getContractFactory(
      name: "Comptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comptroller__factory>;
    getContractFactory(
      name: "ComptrollerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerInterface__factory>;
    getContractFactory(
      name: "ComptrollerInterfaceExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerInterfaceExtension__factory>;
    getContractFactory(
      name: "ComptrollerV1Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerV1Storage__factory>;
    getContractFactory(
      name: "UnitrollerAdminStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnitrollerAdminStorage__factory>;
    getContractFactory(
      name: "EIP20Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP20Interface__factory>;
    getContractFactory(
      name: "EIP20NonStandardInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP20NonStandardInterface__factory>;
    getContractFactory(
      name: "ERC3156FlashBorrowerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashBorrowerInterface__factory>;
    getContractFactory(
      name: "ERC3156FlashLenderInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC3156FlashLenderInterface__factory>;
    getContractFactory(
      name: "ComptrollerErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerErrorReporter__factory>;
    getContractFactory(
      name: "TokenErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenErrorReporter__factory>;
    getContractFactory(
      name: "Comp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Comp__factory>;
    getContractFactory(
      name: "InterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestRateModel__factory>;
    getContractFactory(
      name: "JumpRateModelV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JumpRateModelV2__factory>;
    getContractFactory(
      name: "BCapableErc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCapableErc20__factory>;
    getContractFactory(
      name: "BCapableErc20Delegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCapableErc20Delegate__factory>;
    getContractFactory(
      name: "BCollateralCapErc20Delegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20Delegator__factory>;
    getContractFactory(
      name: "BErc20Immutable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Immutable__factory>;
    getContractFactory(
      name: "BEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEther__factory>;
    getContractFactory(
      name: "BSLPDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BSLPDelegate__factory>;
    getContractFactory(
      name: "IMasterChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMasterChef__factory>;
    getContractFactory(
      name: "ISushiBar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISushiBar__factory>;
    getContractFactory(
      name: "BTokenDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenDelegate__factory>;
    getContractFactory(
      name: "IComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IComptroller__factory>;
    getContractFactory(
      name: "BTokenDeprecated",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenDeprecated__factory>;
    getContractFactory(
      name: "ComptrollerG1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerG1__factory>;
    getContractFactory(
      name: "CBTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CBTokenInterface__factory>;
    getContractFactory(
      name: "CompoundLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundLens__factory>;
    getContractFactory(
      name: "CSLPInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CSLPInterface__factory>;
    getContractFactory(
      name: "LiquidityMiningInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityMiningInterface__factory>;
    getContractFactory(
      name: "Maximillion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Maximillion__factory>;
    getContractFactory(
      name: "Denominations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Denominations__factory>;
    getContractFactory(
      name: "StdReferenceInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StdReferenceInterface__factory>;
    getContractFactory(
      name: "CurveSwapInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveSwapInterface__factory>;
    getContractFactory(
      name: "CurveTokenV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveTokenV3Interface__factory>;
    getContractFactory(
      name: "FeedRegistryInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedRegistryInterface__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "V1PriceOracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V1PriceOracleInterface__factory>;
    getContractFactory(
      name: "XSushiExchangeRateInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XSushiExchangeRateInterface__factory>;
    getContractFactory(
      name: "YVaultV1Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV1Interface__factory>;
    getContractFactory(
      name: "YVaultV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV2Interface__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "PriceOracleProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracleProxy__factory>;
    getContractFactory(
      name: "PriceOracleProxyIB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracleProxyIB__factory>;
    getContractFactory(
      name: "SimplePriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimplePriceOracle__factory>;
    getContractFactory(
      name: "CarefulMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CarefulMath__factory>;
    getContractFactory(
      name: "ErrorReporter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorReporter__factory>;
    getContractFactory(
      name: "Exponential",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Exponential__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;
    getContractFactory(
      name: "BCollateralCapErc20DelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20DelegateHarness__factory>;
    getContractFactory(
      name: "BCollateralCapErc20DelegateScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20DelegateScenario__factory>;
    getContractFactory(
      name: "BCollateralCapErc20DelegatorScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20DelegatorScenario__factory>;
    getContractFactory(
      name: "BCollateralCapErc20NoInterestDelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegateHarness__factory>;
    getContractFactory(
      name: "BCollateralCapErc20NoInterestDelegateScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegateScenario__factory>;
    getContractFactory(
      name: "BCollaterlaCapErc20CheckRepayDelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BCollaterlaCapErc20CheckRepayDelegateHarness__factory>;
    getContractFactory(
      name: "BErc20DelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20DelegateHarness__factory>;
    getContractFactory(
      name: "BErc20DelegateScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20DelegateScenario__factory>;
    getContractFactory(
      name: "BErc20DelegateScenarioExtra",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20DelegateScenarioExtra__factory>;
    getContractFactory(
      name: "BErc20DelegatorScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20DelegatorScenario__factory>;
    getContractFactory(
      name: "BErc20Harness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Harness__factory>;
    getContractFactory(
      name: "BErc20Scenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BErc20Scenario__factory>;
    getContractFactory(
      name: "BEvil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEvil__factory>;
    getContractFactory(
      name: "BWrappedNativeDelegateHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeDelegateHarness__factory>;
    getContractFactory(
      name: "BWrappedNativeDelegateScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeDelegateScenario__factory>;
    getContractFactory(
      name: "BWrappedNativeDelegatorScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BWrappedNativeDelegatorScenario__factory>;
    getContractFactory(
      name: "BEtherHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEtherHarness__factory>;
    getContractFactory(
      name: "BEtherScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BEtherScenario__factory>;
    getContractFactory(
      name: "CompScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompScenario__factory>;
    getContractFactory(
      name: "BoolComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoolComptroller__factory>;
    getContractFactory(
      name: "ComptrollerBorked",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerBorked__factory>;
    getContractFactory(
      name: "ComptrollerHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerHarness__factory>;
    getContractFactory(
      name: "ComptrollerKovan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerKovan__factory>;
    getContractFactory(
      name: "ComptrollerRopsten",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerRopsten__factory>;
    getContractFactory(
      name: "EchoTypesComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EchoTypesComptroller__factory>;
    getContractFactory(
      name: "ComptrollerScenario",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ComptrollerScenario__factory>;
    getContractFactory(
      name: "ConstBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstBase__factory>;
    getContractFactory(
      name: "ConstSub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstSub__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "CurveSwapHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveSwapHarness__factory>;
    getContractFactory(
      name: "CurveSwapInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveSwapInterface__factory>;
    getContractFactory(
      name: "CurveTokenHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveTokenHarness__factory>;
    getContractFactory(
      name: "CurveTokenV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveTokenV3Interface__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20Harness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Harness__factory>;
    getContractFactory(
      name: "ERC20NS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20NS__factory>;
    getContractFactory(
      name: "LPInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LPInterface__factory>;
    getContractFactory(
      name: "LPTokenHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LPTokenHarness__factory>;
    getContractFactory(
      name: "NonStandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonStandardToken__factory>;
    getContractFactory(
      name: "StandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardToken__factory>;
    getContractFactory(
      name: "YVaultV1Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV1Interface__factory>;
    getContractFactory(
      name: "YVaultV1TokenHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV1TokenHarness__factory>;
    getContractFactory(
      name: "YVaultV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV2Interface__factory>;
    getContractFactory(
      name: "YVaultV2TokenHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVaultV2TokenHarness__factory>;
    getContractFactory(
      name: "EvilAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvilAccount__factory>;
    getContractFactory(
      name: "EvilAccount2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvilAccount2__factory>;
    getContractFactory(
      name: "EvilToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvilToken__factory>;
    getContractFactory(
      name: "EvilTransferToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EvilTransferToken__factory>;
    getContractFactory(
      name: "RecipientInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RecipientInterface__factory>;
    getContractFactory(
      name: "FalseMarkerMethodComptroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FalseMarkerMethodComptroller__factory>;
    getContractFactory(
      name: "FalseMarkerMethodInterestRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FalseMarkerMethodInterestRateModel__factory>;
    getContractFactory(
      name: "FaucetNonStandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetNonStandardToken__factory>;
    getContractFactory(
      name: "FaucetToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetToken__factory>;
    getContractFactory(
      name: "FaucetTokenReEntrantHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetTokenReEntrantHarness__factory>;
    getContractFactory(
      name: "FeeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeToken__factory>;
    getContractFactory(
      name: "FixedPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedPriceOracle__factory>;
    getContractFactory(
      name: "FlashloanAndMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanAndMint__factory>;
    getContractFactory(
      name: "FlashloanAndMintNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanAndMintNative__factory>;
    getContractFactory(
      name: "FlashloanAndRepayBorrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanAndRepayBorrow__factory>;
    getContractFactory(
      name: "FlashloanAndRepayBorrowNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanAndRepayBorrowNative__factory>;
    getContractFactory(
      name: "FlashloanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanReceiver__factory>;
    getContractFactory(
      name: "FlashloanReceiverNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanReceiverNative__factory>;
    getContractFactory(
      name: "FlashloanTwice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanTwice__factory>;
    getContractFactory(
      name: "FlashloanTwiceNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashloanTwiceNative__factory>;
    getContractFactory(
      name: "InterestRateModelHarness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestRateModelHarness__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "MockAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAggregator__factory>;
    getContractFactory(
      name: "MockRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockRegistry__factory>;
    getContractFactory(
      name: "MockBTokenAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockBTokenAdmin__factory>;
    getContractFactory(
      name: "MockLiquidityMining",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLiquidityMining__factory>;
    getContractFactory(
      name: "MockReference",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockReference__factory>;
    getContractFactory(
      name: "Structs",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Structs__factory>;
    getContractFactory(
      name: "TetherInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TetherInterface__factory>;
    getContractFactory(
      name: "BasibToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasibToken__factory>;
    getContractFactory(
      name: "BurnableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BurnableToken__factory>;
    getContractFactory(
      name: "CanReclaimToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CanReclaimToken__factory>;
    getContractFactory(
      name: "Claimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Claimable__factory>;
    getContractFactory(
      name: "DetailedERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DetailedERC20__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Basic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Basic__factory>;
    getContractFactory(
      name: "MintableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintableToken__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableContract__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "PausableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableToken__factory>;
    getContractFactory(
      name: "StandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardToken__factory>;
    getContractFactory(
      name: "WBTBToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WBTBToken__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "TripleSlopeRateModel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TripleSlopeRateModel__factory>;
    getContractFactory(
      name: "Unitroller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unitroller__factory>;

    getContractAt(
      name: "BCollateralCapErc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20>;
    getContractAt(
      name: "BCollateralCapErc20CheckRepay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20CheckRepay>;
    getContractAt(
      name: "BCollateralCapErc20CheckRepayDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20CheckRepayDelegate>;
    getContractAt(
      name: "BCollateralCapErc20Delegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20Delegate>;
    getContractAt(
      name: "BCollateralCapErc20NoInterest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20NoInterest>;
    getContractAt(
      name: "BCollateralCapErc20NoInterestDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegate>;
    getContractAt(
      name: "BErc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20>;
    getContractAt(
      name: "BErc20Delegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Delegate>;
    getContractAt(
      name: "BErc20Delegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Delegator>;
    getContractAt(
      name: "BToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BToken>;
    getContractAt(
      name: "BTokenAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenAdmin>;
    getContractAt(
      name: "BTokenCheckRepay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenCheckRepay>;
    getContractAt(
      name: "BCapableErc20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCapableErc20Interface>;
    getContractAt(
      name: "BCollateralCapErc20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20Interface>;
    getContractAt(
      name: "BCollateralCapStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapStorage>;
    getContractAt(
      name: "BDelegateInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BDelegateInterface>;
    getContractAt(
      name: "BDelegatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BDelegatorInterface>;
    getContractAt(
      name: "BErc20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Interface>;
    getContractAt(
      name: "BErc20Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Storage>;
    getContractAt(
      name: "BSupplyCapStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BSupplyCapStorage>;
    getContractAt(
      name: "BTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenInterface>;
    getContractAt(
      name: "BTokenStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenStorage>;
    getContractAt(
      name: "BWrappedNativeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeInterface>;
    getContractAt(
      name: "IFlashloanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashloanReceiver>;
    getContractAt(
      name: "BTokenNoInterest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenNoInterest>;
    getContractAt(
      name: "BWrappedNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNative>;
    getContractAt(
      name: "WrappedNativeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WrappedNativeInterface>;
    getContractAt(
      name: "BWrappedNativeDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeDelegate>;
    getContractAt(
      name: "BWrappedNativeDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeDelegator>;
    getContractAt(
      name: "Comptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Comptroller>;
    getContractAt(
      name: "ComptrollerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerInterface>;
    getContractAt(
      name: "ComptrollerInterfaceExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerInterfaceExtension>;
    getContractAt(
      name: "ComptrollerV1Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerV1Storage>;
    getContractAt(
      name: "UnitrollerAdminStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnitrollerAdminStorage>;
    getContractAt(
      name: "EIP20Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP20Interface>;
    getContractAt(
      name: "EIP20NonStandardInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP20NonStandardInterface>;
    getContractAt(
      name: "ERC3156FlashBorrowerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashBorrowerInterface>;
    getContractAt(
      name: "ERC3156FlashLenderInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC3156FlashLenderInterface>;
    getContractAt(
      name: "ComptrollerErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerErrorReporter>;
    getContractAt(
      name: "TokenErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenErrorReporter>;
    getContractAt(
      name: "Comp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Comp>;
    getContractAt(
      name: "InterestRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestRateModel>;
    getContractAt(
      name: "JumpRateModelV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JumpRateModelV2>;
    getContractAt(
      name: "BCapableErc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCapableErc20>;
    getContractAt(
      name: "BCapableErc20Delegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCapableErc20Delegate>;
    getContractAt(
      name: "BCollateralCapErc20Delegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20Delegator>;
    getContractAt(
      name: "BErc20Immutable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Immutable>;
    getContractAt(
      name: "BEther",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEther>;
    getContractAt(
      name: "BSLPDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BSLPDelegate>;
    getContractAt(
      name: "IMasterChef",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMasterChef>;
    getContractAt(
      name: "ISushiBar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISushiBar>;
    getContractAt(
      name: "BTokenDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenDelegate>;
    getContractAt(
      name: "IComptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IComptroller>;
    getContractAt(
      name: "BTokenDeprecated",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenDeprecated>;
    getContractAt(
      name: "ComptrollerG1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerG1>;
    getContractAt(
      name: "CBTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CBTokenInterface>;
    getContractAt(
      name: "CompoundLens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundLens>;
    getContractAt(
      name: "CSLPInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CSLPInterface>;
    getContractAt(
      name: "LiquidityMiningInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityMiningInterface>;
    getContractAt(
      name: "Maximillion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Maximillion>;
    getContractAt(
      name: "Denominations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Denominations>;
    getContractAt(
      name: "StdReferenceInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StdReferenceInterface>;
    getContractAt(
      name: "CurveSwapInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveSwapInterface>;
    getContractAt(
      name: "CurveTokenV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveTokenV3Interface>;
    getContractAt(
      name: "FeedRegistryInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedRegistryInterface>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "V1PriceOracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V1PriceOracleInterface>;
    getContractAt(
      name: "XSushiExchangeRateInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XSushiExchangeRateInterface>;
    getContractAt(
      name: "YVaultV1Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV1Interface>;
    getContractAt(
      name: "YVaultV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV2Interface>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "PriceOracleProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracleProxy>;
    getContractAt(
      name: "PriceOracleProxyIB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracleProxyIB>;
    getContractAt(
      name: "SimplePriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimplePriceOracle>;
    getContractAt(
      name: "CarefulMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CarefulMath>;
    getContractAt(
      name: "ErrorReporter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorReporter>;
    getContractAt(
      name: "Exponential",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Exponential>;
    getContractAt(
      name: "PriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;
    getContractAt(
      name: "BCollateralCapErc20DelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20DelegateHarness>;
    getContractAt(
      name: "BCollateralCapErc20DelegateScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20DelegateScenario>;
    getContractAt(
      name: "BCollateralCapErc20DelegatorScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20DelegatorScenario>;
    getContractAt(
      name: "BCollateralCapErc20NoInterestDelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegateHarness>;
    getContractAt(
      name: "BCollateralCapErc20NoInterestDelegateScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollateralCapErc20NoInterestDelegateScenario>;
    getContractAt(
      name: "BCollaterlaCapErc20CheckRepayDelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BCollaterlaCapErc20CheckRepayDelegateHarness>;
    getContractAt(
      name: "BErc20DelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20DelegateHarness>;
    getContractAt(
      name: "BErc20DelegateScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20DelegateScenario>;
    getContractAt(
      name: "BErc20DelegateScenarioExtra",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20DelegateScenarioExtra>;
    getContractAt(
      name: "BErc20DelegatorScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20DelegatorScenario>;
    getContractAt(
      name: "BErc20Harness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Harness>;
    getContractAt(
      name: "BErc20Scenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BErc20Scenario>;
    getContractAt(
      name: "BEvil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEvil>;
    getContractAt(
      name: "BWrappedNativeDelegateHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeDelegateHarness>;
    getContractAt(
      name: "BWrappedNativeDelegateScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeDelegateScenario>;
    getContractAt(
      name: "BWrappedNativeDelegatorScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BWrappedNativeDelegatorScenario>;
    getContractAt(
      name: "BEtherHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEtherHarness>;
    getContractAt(
      name: "BEtherScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BEtherScenario>;
    getContractAt(
      name: "CompScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompScenario>;
    getContractAt(
      name: "BoolComptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoolComptroller>;
    getContractAt(
      name: "ComptrollerBorked",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerBorked>;
    getContractAt(
      name: "ComptrollerHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerHarness>;
    getContractAt(
      name: "ComptrollerKovan",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerKovan>;
    getContractAt(
      name: "ComptrollerRopsten",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerRopsten>;
    getContractAt(
      name: "EchoTypesComptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EchoTypesComptroller>;
    getContractAt(
      name: "ComptrollerScenario",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ComptrollerScenario>;
    getContractAt(
      name: "ConstBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConstBase>;
    getContractAt(
      name: "ConstSub",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConstSub>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "CurveSwapHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveSwapHarness>;
    getContractAt(
      name: "CurveSwapInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveSwapInterface>;
    getContractAt(
      name: "CurveTokenHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveTokenHarness>;
    getContractAt(
      name: "CurveTokenV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveTokenV3Interface>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Base",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Base>;
    getContractAt(
      name: "ERC20Harness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Harness>;
    getContractAt(
      name: "ERC20NS",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20NS>;
    getContractAt(
      name: "LPInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LPInterface>;
    getContractAt(
      name: "LPTokenHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LPTokenHarness>;
    getContractAt(
      name: "NonStandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonStandardToken>;
    getContractAt(
      name: "StandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardToken>;
    getContractAt(
      name: "YVaultV1Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV1Interface>;
    getContractAt(
      name: "YVaultV1TokenHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV1TokenHarness>;
    getContractAt(
      name: "YVaultV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV2Interface>;
    getContractAt(
      name: "YVaultV2TokenHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVaultV2TokenHarness>;
    getContractAt(
      name: "EvilAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvilAccount>;
    getContractAt(
      name: "EvilAccount2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvilAccount2>;
    getContractAt(
      name: "EvilToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvilToken>;
    getContractAt(
      name: "EvilTransferToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EvilTransferToken>;
    getContractAt(
      name: "RecipientInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RecipientInterface>;
    getContractAt(
      name: "FalseMarkerMethodComptroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FalseMarkerMethodComptroller>;
    getContractAt(
      name: "FalseMarkerMethodInterestRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FalseMarkerMethodInterestRateModel>;
    getContractAt(
      name: "FaucetNonStandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetNonStandardToken>;
    getContractAt(
      name: "FaucetToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetToken>;
    getContractAt(
      name: "FaucetTokenReEntrantHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetTokenReEntrantHarness>;
    getContractAt(
      name: "FeeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeToken>;
    getContractAt(
      name: "FixedPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedPriceOracle>;
    getContractAt(
      name: "FlashloanAndMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanAndMint>;
    getContractAt(
      name: "FlashloanAndMintNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanAndMintNative>;
    getContractAt(
      name: "FlashloanAndRepayBorrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanAndRepayBorrow>;
    getContractAt(
      name: "FlashloanAndRepayBorrowNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanAndRepayBorrowNative>;
    getContractAt(
      name: "FlashloanReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanReceiver>;
    getContractAt(
      name: "FlashloanReceiverNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanReceiverNative>;
    getContractAt(
      name: "FlashloanTwice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanTwice>;
    getContractAt(
      name: "FlashloanTwiceNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashloanTwiceNative>;
    getContractAt(
      name: "InterestRateModelHarness",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestRateModelHarness>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "MockAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAggregator>;
    getContractAt(
      name: "MockRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockRegistry>;
    getContractAt(
      name: "MockBTokenAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockBTokenAdmin>;
    getContractAt(
      name: "MockLiquidityMining",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLiquidityMining>;
    getContractAt(
      name: "MockReference",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockReference>;
    getContractAt(
      name: "Structs",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Structs>;
    getContractAt(
      name: "TetherInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TetherInterface>;
    getContractAt(
      name: "BasibToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasibToken>;
    getContractAt(
      name: "BurnableToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BurnableToken>;
    getContractAt(
      name: "CanReclaimToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CanReclaimToken>;
    getContractAt(
      name: "Claimable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Claimable>;
    getContractAt(
      name: "DetailedERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DetailedERC20>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Basic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Basic>;
    getContractAt(
      name: "MintableToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintableToken>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "OwnableContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableContract>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "PausableToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableToken>;
    getContractAt(
      name: "StandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardToken>;
    getContractAt(
      name: "WBTBToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WBTBToken>;
    getContractAt(
      name: "WETH9",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH9>;
    getContractAt(
      name: "TripleSlopeRateModel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TripleSlopeRateModel>;
    getContractAt(
      name: "Unitroller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Unitroller>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
